# # Dutch Flag Problem

# Given an array, `arr`, containing only of the characters 'R' (red), 'W' (white), and 'B' (blue), sort the array in place so that the same colors are adjacent, with the colors in the order red, white, and blue.

# ```
# Example 1:
# Input: arr = ['R', 'W', 'B', 'B', 'W', 'R', 'W']
# Output: ['R', 'R', 'W', 'W', 'W', 'B', 'B']

# Example 2:
# Input: arr = ['B', 'R']
# Output: ['R', 'B']
# ```

# Constraints:
# - 0 ≤ arr.length ≤ 10^6
# - arr[i] is either 'R', 'W', or 'B'

from typing import List


def swap(arr, i, j):
    temp = arr[i]
    arr[i] = arr[j]
    arr[j] = temp

def sortColors(arr: List[int]) -> None:
    l , r = 0 , len(arr) - 1
    i = 0

    while i < r:
        if arr[i] == "W":
            i += 1
        elif arr[i] == "R":
            swap (arr, i, l)
            l += 1
            i += 1
        else:
            # arr[i] would be "B"
            swap(arr, i, r)
            r -= 1
        
    



